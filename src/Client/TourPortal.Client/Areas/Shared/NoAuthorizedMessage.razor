@page "/{homeUrl}/notauthorized"


@if (!string.IsNullOrEmpty(HomeUrl))
{
    <PageModelComponent>
        <PageHeader>
            <h3>Не позволен достъп</h3>
        </PageHeader>
        <PageBody>
            <div class="card border-danger text-center">
                <div class="card-header">
                    <h3>Внимание!</h3>
                </div>
                <div class="card-body text-danger">
                    <h5 class="card-title">Достъпът до този ресурс е отказан.</h5>
                    <h5 class="card-text">С цел защита данните на потребителите, достъпът до ресурси е ограничен. За повече информация admin@test.com</h5>
                    <br/>
                    <a href="@Uri" class="btn btn-primary">Начало</a>
                </div>
                <div class="card-footer text-muted">
                    Copyright &copy; <span>@year</span> All Rights Reserved by Tour Portal.
                </div>
            </div>
        </PageBody>
    </PageModelComponent>
}

@code {
    [Parameter]
    public string HomeUrl { get; set; }
    private string Uri = string.Empty;
    private int year;

    protected override async Task OnInitializedAsync()
    {
        var state = await _state.GetAuthenticationStateAsync();

        if (state.User.IsInRole(Security.Role.Owner) || state.User.IsInRole(Security.Role.User))
        {
            Uri = "/user";
        }
        else
        {
            Uri = "/administrator";
        }

        year = await _jsRuntime.InvokeAsync<int>("getYear");
    }
}
